language: node
sudo: required
services:
- docker
branches:
  only:
  - master
  - development
cache:
  directories:
  - "$HOME/google-cloud-sdk/"
before_install:
jobs:
  include:
  - stage: unit-tests
    if: "NOT type IN (pull_request)"
    script:
    - cd kauri-ops
    - source env_setup.sh --config-file config/config-devgke.json
    - cd ..
    - gcloud config set project $GOOGLE_PROJECT_ID
    - gcloud container clusters get-credentials $ACS_NAME --zone $GOOGLE_ZONE
    - export BUILD_TAG=${REGISTRY_URL}/${GOOGLE_PROJECT_ID}
    - gcloud docker -- pull ${BUILD_TAG}/kauri-contract-abis:latest-dev
    - docker build -t flow-frontend-boilerplate:unit-tests -f Dockerfile-unit .
    - touch secret.env
    - echo "DEV_SEED_WORDS=${DEV_SEED_WORDS}" > secret.env
    - docker run --env-file=secret.env --rm flow-frontend-boilerplate:unit-tests
  - stage: deploy-dev
    if: branch = development
    install:
    - cd kauri-ops
    - source env_setup.sh --config-file config/config-devgke.json
    - cd ..
    - gcloud config set project $GOOGLE_PROJECT_ID
    - gcloud container clusters get-credentials $ACS_NAME --zone $GOOGLE_ZONE
    - kubectl config set-context $(kubectl config current-context) --namespace=${TARGET_ENV}
    script:
    - FRONTEND_VERSION=$(npm version | grep kauri-frontend | head -1 | awk '{ print $3 }' | sed 's/[",]//g' | sed 's|["'\'']||g')
    - cd scripts
    - 'if [ "$AUTHOR_NAME" != "Travis CI User" ]; then bash ./deploy.sh ${FRONTEND_VERSION}-SNAPSHOT; fi'
  - stage: git-tag
    if: "(NOT type IN (pull_request) AND (branch = master))"
    script:
    - FRONTEND_VERSION=$(npm version | grep kauri-frontend | head -1 | awk '{ print $3 }' | sed 's/[",]//g' | sed 's|["'\'']||g')
    - git config remote.origin.fetch '+refs/tags/*:refs/tags/*'
    - git fetch --all
    - bash ./kauri-ops/versioning/gittag.sh $FRONTEND_VERSION
    - NEW_DEV_VERSION=$(./kauri-ops/versioning/get-next-dev-ver.sh)
    - echo $NEW_DEV_VERSION
    - git config remote.origin.fetch '+refs/heads/*:refs/remotes/origin/*'
    - git fetch --all
    - git checkout development
    - npm version $NEW_DEV_VERSION --no-git-tag-version
    - git add .
    - git commit -m "Travis build $TRAVIS_BUILD_NUMBER updating version after tag"
    - git push origin development
  - stage: deploy-uat
    if: "(NOT type IN (pull_request) AND (branch = master))"
    install:
    - cd kauri-ops
    - source env_setup.sh --config-file config/config-uat.json
    - cd ..
    - gcloud config set project $GOOGLE_PROJECT_ID
    - gcloud container clusters get-credentials $ACS_NAME --zone $GOOGLE_ZONE
    - kubectl config set-context $(kubectl config current-context) --namespace=${TARGET_ENV}
    script:
    - FRONTEND_VERSION=$(npm version | grep kauri-frontend | head -1 | awk '{ print $3 }' | sed 's/[",]//g' | sed 's|["'\'']||g')
    - cd scripts
    - "./deploy.sh ${FRONTEND_VERSION}"
